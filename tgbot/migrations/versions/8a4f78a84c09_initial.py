"""initial

Revision ID: 8a4f78a84c09
Revises: 
Create Date: 2023-08-28 18:11:11.165779

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8a4f78a84c09'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bot_clients',
    sa.Column('tg_id', sa.BIGINT(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('balance', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('tg_id', name=op.f('pk_bot_clients'))
    )
    op.create_table('features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_features'))
    )
    op.create_table('tariffs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sum', sa.Integer(), nullable=False),
    sa.Column('limitation_days', sa.Integer(), nullable=False),
    sa.Column('groups_count', sa.Integer(), nullable=False),
    sa.Column('free', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tariffs')),
    sa.UniqueConstraint('name', name=op.f('uq_tariffs_name'))
    )
    op.create_table('client_subscribe',
    sa.Column('client_id', sa.BIGINT(), nullable=False),
    sa.Column('tariff_id', sa.Integer(), nullable=False),
    sa.Column('auto_credit', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['bot_clients.tg_id'], name=op.f('fk_client_subscribe_client_id_bot_clients')),
    sa.ForeignKeyConstraint(['tariff_id'], ['tariffs.id'], name=op.f('fk_client_subscribe_tariff_id_tariffs')),
    sa.PrimaryKeyConstraint('client_id', 'tariff_id', name=op.f('pk_client_subscribe')),
    sa.UniqueConstraint('client_id', name=op.f('uq_client_subscribe_client_id'))
    )
    op.create_table('tariff_features',
    sa.Column('tariff_id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], name=op.f('fk_tariff_features_feature_id_features')),
    sa.ForeignKeyConstraint(['tariff_id'], ['tariffs.id'], name=op.f('fk_tariff_features_tariff_id_tariffs')),
    sa.PrimaryKeyConstraint('tariff_id', 'feature_id', name=op.f('pk_tariff_features'))
    )
    op.create_table('user_tg_group_bots',
    sa.Column('group_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('bot_settings', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['bot_clients.tg_id'], name=op.f('fk_user_tg_group_bots_user_id_bot_clients')),
    sa.PrimaryKeyConstraint('group_id', name=op.f('pk_user_tg_group_bots'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_tg_group_bots')
    op.drop_table('tariff_features')
    op.drop_table('client_subscribe')
    op.drop_table('tariffs')
    op.drop_table('features')
    op.drop_table('bot_clients')
    # ### end Alembic commands ###
